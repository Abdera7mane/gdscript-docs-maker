#!/usr/bin/env sh

project_directory="$1"
output_directory="export"

echo_help() {
	echo '
    Generate a code reference from GDScript
    Usage:
    generate_reference $project_directory [options]

    Required arguments:

    $project_directory -- path to your Godot project directory.
    This directory or one of its subdirectories should contain a
    project.godot file.

    Flags:

    -h/--help             -- Display this help message.
    -o/--output-directory -- directory path to output the documentation into.
    '
	exit 0
}

arguments=$(getopt --name "generate_reference" -o "h,o:" -l "help,output-directory:" -- "$@")
eval set -- "$arguments"
while true; do
	case "$1" in
	-h | --help)
		help
		shift
		;;
	-o | --output-directory)
		output_directory=$2
		shift 2
		;;
	--)
		shift
		break
		;;
	*)
		echo "Missing arguments. Try 'generate_reference --help' for more information"
		exit 1
		;;
	esac
done

# Testing input parameters
if test -z "$project_directory"; then
	echo "Missing first parameter: project_directory."
	exit 1
fi

if ! test -d "$project_directory"; then
	echo "Directory $project_directory does not exist, exiting."
	exit 1
fi

godot_project_file=$(find "$project_directory" -iname project.godot -print -quit)
if ! test -f "$godot_project_file"; then
	echo "Could not find a project.godot file in $project_directory. This program needs a Godot project to work."
	exit 1
fi

# Generate reference JSON data from Godot
godot_project_dir=$(dirname "$godot_project_file")
gdscript_1="godot-scripts/ReferenceCollectorCLI.gd"
gdscript_2="godot-scripts/Collector.gd"

cp -v $gdscript_1 "$godot_project_dir"
cp -v $gdscript_2 "$godot_project_dir"

echo "Generating reference json data..."
godot --editor --quit --script --no-window --path "$godot_project_dir" ReferenceCollectorCLI.gd >/dev/null
test $? -gt 0 && echo "There was an error running 'godot', exiting." && exit 1
echo "Done."

if ! test -f "$godot_project_dir/reference.json"; then
	echo "There was an error generating the reference from Godot. The file $godot_project_dir/reference.json was not found."
	exit 1
fi

rm -v "$godot_project_dir/$(basename $gdscript_1)"
rm -v "$godot_project_dir/$(basename $gdscript_2)"

# Generate markdown files
echo "Generating markdown files in $output_directory"
! test -d "$output_directory" && mkdir -v "$output_directory"
python3 -m gdscript_docs_maker "$godot_project_dir/reference.json" --path $output_directory
